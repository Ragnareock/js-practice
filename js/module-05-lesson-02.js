/*
 * –ö–ª–∞—Å–∏: –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –º–µ—Ç–æ–¥–∏
 * –ü—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏
 * –ì–µ—Ç—Ç–µ—Ä–∏ —Ç–∞ —Å–µ—Ç—Ç–µ—Ä–∏
 * –°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏
 */

// class User {
//     #userLogin;
//     #password;
  
//     static test = 5;
  
//     constructor(userInfo) {
//       // this = {};
//       const { firstName, lastName, age = null, phoneNumber, login, password } = userInfo;
  
//       this.firstName = firstName;
//       this.lastName = lastName;
//       this.age = age;
//       this.phoneNumber = phoneNumber;
//       this.#userLogin = login;
//       this.#password = password;
//       // return this;
//     }
  
//     get login() {
//       return this.#userLogin;
//     }
  
//     set login(newLogin) {
//       this.#userLogin = newLogin;
//     }
  
//     changeFirstName(newFirstName) {
//       this.firstName = newFirstName;
//       User.validateEmail();
//     }
  
//     static validateEmail() {
//       console.log('Hello');
//     }
//   }
  
//   const user1 = new User({
//     lastName: 'Smith',
//     age: 30,
//     phoneNumber: '(096) 58-05-459',
//     login: 'id@si.pg',
//     password: '123456',
//     firstName: 'Edward',
//   });
  
//   console.log(user1);
  
//   user1.changeFirstName('Oleksii');
  
//   console.dir(User);
  
//   const obj = new Object();

/*
 * –ö–ª–∞—Å - —à–∞–±–ª–æ–Ω, –∑–∞ —è–∫–∏–º –±—É–¥—É—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω—ñ –æ–¥–Ω–æ—Ç–∏–ø–Ω—ñ –æ–±'—î–∫—Ç–∏
 * –ï–∫–∑–µ–º–ø–ª—è—Ä - —Ü–µ –æ–±'—î–∫—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –∑–∞ –∫–ª–∞—Å–æ–º
 * –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å - –Ω–∞–±—ñ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤ —Ç–∞ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π
 */

//? –§—É–Ω–∫—Ü—ñ—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
// const User = function (userInfo) {
//     const { firstName, lastName, age = null, phoneNumber, login, password } = userInfo;
  
//     // this = {};
//     this.firstName = firstName;
//     this.lastName = lastName;
//     this.age = age;
//     this.phoneNumber = phoneNumber;
//     this.login = login;
//     this.password = password;
//     // return this;
//   };
  
//   User.prototype.changeFirstName = function (newFirstName) {
//     this.firstName = newFirstName;
//   };
  
//   console.dir(User);
  
//   const user1 = new User({
//     lastName: 'Smith',
//     age: 30,
//     phoneNumber: '(096) 58-05-459',
//     login: 'id@si.pg',
//     password: '123456',
//     firstName: 'Edward',
//   });
  
//   console.log(user1);
  
//   const user2 = new User({
//     firstName: 'Michael',
//     lastName: 'Gill',
//     age: 20,
//     login: 'cu@hecekalo.edu',
//     phoneNumber: '(097) 60-62-231',
//     password: 'qwerty123',
//   });
  
//   console.log(user2);
  
//   user1.changeFirstName('Oleksii');
//   user2.changeFirstName('Marvin');
  
//   console.log(user1);
//   console.log(user2);
  
  // const user1 = {
  //   firstName: 'Edward',
  //   lastName: 'Smith',
  //   age: 30,
  //   phoneNumber: '(096) 58-05-459';
  //   login: 'id@si.pg';
  //   password: '123456'
  // };
  
  // const user2 = {
  //   firstName: 'Michael',
  //   lastName: 'Gill',
  //   age: 20,
  //   login: 'cu@hecekalo.edu';
  //   phoneNumber: '(097) 60-62-231';
  //   password: 'qwerty123'
  // };
  
  //? –°—Ç–≤–æ—Ä—é—î–º–æ –º–µ—Ç–æ–¥–∏ –¥–ª—è –Ω–∞—à–∏—Ö –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤

  /*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
? email - email
? age - –≤—ñ–∫, —á–∏—Å–ª–æ
? numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
? topics - –º–∞—Å–∏–≤ —Ç–µ–º, –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
? –ö–ª–∞—Å –æ—á—ñ–∫—É—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä ‚Äì –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: Blogger ${email} is ${–≤—ñ–∫} years old and has ${–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤} posts.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
*/

// class Blogger {
//   constructor(bloggerInfo) {
//     // this = {};
//     const { email, age, numberOfPosts, topics } = bloggerInfo;

//     this.email = email;
//     this.age = age;
//     this.numberOfPosts = numberOfPosts;
//     this.topics = topics;
//     // return this;
//   }

//   getInfo() {
//     return `Blogger ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts.`;
//   }

//   updatePostCount(value) {
//     if (value > 0) {
//       this.numberOfPosts += value;
//     }
//   }
// }

// const mango = new Blogger({
//   email: 'mango@mail.com',
//   age: 24,
//   numberOfPosts: 20,
//   topics: ['tech', 'cooking'],
// });

// console.log(mango);
// console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 25 posts

// const poly = new Blogger({
//   email: 'poly@mail.com',
//   age: 19,
//   numberOfPosts: 17,
//   topics: ['sports', 'gaming', 'health'],
// });

// console.log(poly);
// console.log(poly.getInfo()); // Blogger poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // Blogger poly@mail.com is 19 years old and has 21 posts

/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
? –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤, —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:
? getItems() ‚Äì –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
? addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —Ç–∞ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
? removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.
*/
// class Storage {
//   constructor(items) {
//     this.items = items;
//   }

//   getItems() {
//     return this.items;
//   }

//   addItem(item) {
//     this.items.push(item);
//   }

//   removeItem(item) {
//     if (this.items.includes(item)) {
//       const idxOfItem = this.items.indexOf(item);

//       this.items.splice(idxOfItem, 1);
//     }
//   }
// }

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// console.log(storage.getItems()); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

// storage.addItem('üçå');
// console.log(storage.getItems()); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.log(storage.getItems()); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]
/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
? –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä login —Ç–∞ email.
*/

// class User {
//   #login;
//   #email;

//   constructor({ login, email }) {
//     this.#login = login;
//     this.#email = email;
//   }

//   get login() {
//     return this.#login;
//   }

//   set login(newLogin) {
//     this.#login = newLogin;
//   }

//   get email() {
//     return this.#email;
//   }

//   set email(newEmail) {
//     this.#email = newEmail;
//   }
// }

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// console.log(mango.email);
// mango.email = 'hacag@ce.ie';
// console.log(mango.email);

// const poly = new User({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie
/*
? –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes, —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
? –ù–æ—Ç–∞—Ç–∫–∞ —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —Ç–∞ priority.
? –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priority, –≤ —è–∫—ñ–π –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ—Ç—å—Å—è –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.
?
? {
? LOW: 'low',
? NORMAL: 'normal',
? HIGH: 'high'
? }
?
? –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ addNote(note), removeNote(text) —Ç–∞ updatePriority(text, newPriority).
*/
// class Notes {
//   static Priority = {
//     LOW: 'low',
//     NORMAL: 'normal',
//     HIGH: 'high',
//   };

//   constructor(notesArr) {
//     this.items = notesArr;
//   }

//   addNote(note) {
//     this.items.push(note);
//   }

//   removeNote(text) {
//     const idxOfNote = this.items.findIndex(el => el.text === text);

//     this.items.splice(idxOfNote, 1);
//   }

//   updatePriority(text, newPriority) {
//     const note = this.items.find((el, idx, arr) => {
//       return el.text === text;
//     });

//     note.priority = newPriority;
//   }
// }

// const myNotes = new Notes([]);

// myNotes.addNote({ text: '–ú–æ—è –ø–µ—Ä—à–∞ –Ω–æ—Ç–∞—Ç–∫–∞', priority: Notes.Priority.LOW });
// console.log(myNotes);

// myNotes.addNote({
//   text: '–ú–æ—è –¥—Ä—É–≥–∞ –Ω–æ—Ç–∞—Ç–∫–∞',
//   priority: Notes.Priority.NORMAL,
// });
// console.log(myNotes);

// myNotes.removeNote('–ú–æ—è –ø–µ—Ä—à–∞ –Ω–æ—Ç–∞—Ç–∫–∞');
// console.log(myNotes);

// myNotes.updatePriority('–ú–æ—è –¥—Ä—É–≥–∞ –Ω–æ—Ç–∞—Ç–∫–∞', Notes.Priority.HIGH);
// console.log(myNotes);

/*
? –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª–∞—Å Toggle, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å {isOpen: boolean}
? —Ç–∞ –æ–≥–æ–ª–æ—à—É—î –æ–¥–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å on - —Å—Ç–∞–Ω –≤–∫–ª/–≤–∏–∫–ª (true/false).
? –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ on –º–∞—î –±—É—Ç–∏ false.
*/

// class Toggle {
//     constructor(settings = {}) {
//       const { isOpen = false } = settings;
  
//       this.on = isOpen;
//     }
  
//     toggle() {
//       this.on = !this.on;
//     }
//   }
  
//   const firstToggle = new Toggle({ isOpen: true });
  
//   console.group('firstToggle');
//   console.log(firstToggle.on);
//   firstToggle.toggle();
//   console.log(firstToggle.on);
//   firstToggle.toggle();
//   console.log(firstToggle.on);
//   console.groupEnd('firstToggle');
  
//   const secondToggle = new Toggle();
  
//   console.group('secondToggle');
//   console.log(secondToggle.on);
//   secondToggle.toggle();
//   console.log(secondToggle.on);
//   console.groupEnd('secondToggle');

/*
 * –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –∑ extends —Ç–∞ super
 */
// class User {
//     #login;
//     #email;
  
//     constructor({ firstName, lastName, age, login, email }) {
//       // this = {}
//       this.firstName = firstName;
//       this.lastName = lastName;
//       this.userAge = age;
//       this.#login = login;
//       this.#email = email;
//       // return this;
//     }
  
//     get login() {
//       return this.#login;
//     }
  
//     set login(newLogin) {
//       this.#login = newLogin;
//     }
  
//     get email() {
//       return this.#email;
//     }
  
//     set email(newEmail) {
//       this.#email = newEmail;
//     }
  
//     getFullName() {
//       return `${User.trimStr(this.firstName)} ${User.trimStr(this.lastName)}`;
//     }
  
//     static trimStr(str) {
//       return str.trim();
//     }
//   }
  
//   class Developer extends User {
//     constructor(developerInfo) {
//       const { countOfProjects, ...otherProps } = developerInfo;
  
//       super(otherProps);
  
//       this.countOfProjects = countOfProjects;
//     }
  
//     doDeveloperWork() {
//       console.log(`–†–æ–±–ª—é —è–∫—É—Å—å —Ä–æ–±–æ—Ç—É`);
//     }
//   }
  
//   class Manager extends User {
//     constructor(managerInfo) {
//       const { managerProp, ...otherProps } = managerInfo;
  
//       super(otherProps);
  
//       this.managerProp = managerProp;
//     }
  
//     doManagerWork() {
//       console.log(`–†–æ–±–ª—é —è–∫—É—Å—å —Ä–æ–±–æ—Ç—É`);
//     }
//   }
  
//   const user = new Developer({
//     countOfProjects: 10,
//     firstName: 'Nicholas',
//     lastName: 'West',
//     age: 30,
//     login: 'vcvd',
//     email: 'iseegi@sak.sx',
//   });
  
//   console.log(user);
  
//   const someManager = new Manager({
//     managerProp: 343,
//     firstName: 'Caleb',
//     lastName: 'Murray',
//     age: 20,
//     login: 'bgff',
//     email: 'uwigicnaf@ra.be',
//   });
  
//   console.log(someManager);

/*
 * –õ–∞–Ω—Ü—é–∂–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ñ–≤.
 * Object.create().
 * obj.hasOwnProperty()
 */
// const user = {
//     firstName: 'Oleksii',
//     age: 40,
//   };
  
//   const user2 = Object.create(user);
  
//   user2.firstName = '';
//   user2.lastName = 'Brock';
  
//   console.log('user: ', user);
//   console.log('user2: ', user2);
//   console.log(user2.firstName);
  
//   const user3 = Object.create(user2);
  
//   user3.firstName = 'Celia';
  
//   console.log('user3: ', user3);
  
  // https://learn.javascript.ru/article/native-prototypes/native-prototypes-classes.svg
  
  //* –í–ª–∞—Å–Ω—ñ —Ç–∞ –Ω–µ –≤–ª–∞—Å–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞
  
  //* –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–ª–∞—Å–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π obj.hasOwnProperty()
  // console.log(user3.hasOwnProperty('firstName'));
  
  //* –¶–∏–∫–ª for...in, –ø–µ—Ä–µ–±–∏—Ä–∞—î —ñ –≤–ª–∞—Å–Ω—ñ, —ñ –Ω–µ –≤–ª–∞—Å–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ.
//   for (const prop in user3) {
//     if (user3.hasOwnProperty(prop)) {
//       console.log(`${prop}: ${user3[prop]}`);
//     }
//   }